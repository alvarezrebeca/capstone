# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
jobs:
  build-environment:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/capstone

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            pip install pylint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
            
  build-docker-image:
    machine: true
    working_directory: ~/capstone
    steps:
      - checkout
      - run: 
          name: build, tag and push image
          command: |
            echo $DOCKER_PASSWORD | docker login --username alvarezrebeca --password-stdin
            # build 
            docker build -t alvarezrebeca/app:${CIRCLE_WORKFLOW_ID:0:7} .
            # tag
            docker tag alvarezrebeca/app:${CIRCLE_WORKFLOW_ID:0:7} alvarezrebeca/app:latest
            # push
            docker push alvarezrebeca/app:latest

  deploy-eks-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          cluster name
        type: string
      aws-region:
        type: string 
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: eu-central-1
      - run:
          command: |
            kubectl get services
          name: eks-cluster-alvarez
    
    #create-deployment:
    #  executor: aws-eks/python3
    #  parameters:
    #    cluster-name:
    #      description: |
    #        app cluster
    #      type: string
    #  steps:
    #    - checkout
    #    - aws-eks/update-kubeconfig-with-authenticator:
    #        cluster-name: << parameters.cluster-name >>
    #        install-kubectl: true
    #    - kubernetes/create-or-update-resource:
    #        get-rollout-status: true
    #        resource-file-path: tests/nginx-deployment/deployment.yaml
    #        resource-name: deployment/nginx-deployment
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0
version: 2.1          
workflows:
  default:
    jobs:
      - build-environment
      - build-docker-image:
          requires: [build-environment]
      - aws-eks/create-cluster:
          cluster-name: eks-cluster-alvarez
      - deploy-eks-cluster:
          cluster-name: eks-cluster-alvarez
          aws-region: eu-central-1
          requires:
            - aws-eks/create-cluster
