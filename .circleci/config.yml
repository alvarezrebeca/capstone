version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  build-environment:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/capstone

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            pip install pylint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
            
  build-and-push-docker-image:
    machine: true
    working_directory: ~/capstone
    steps:
      - checkout
      - run: 
          name: build, tag and push image
          command: |
            echo $DOCKER_PASSWORD | docker login --username alvarezrebeca --password-stdin
            # build 
            docker build -t alvarezrebeca/app:${CIRCLE_WORKFLOW_ID:0:7} .
            # tag
            docker tag alvarezrebeca/app:${CIRCLE_WORKFLOW_ID:0:7} alvarezrebeca/app:latest
            # push
            docker push alvarezrebeca/app:latest
            
  create-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
        
    steps:
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
            
      - aws-eks/create-cluster:
          cluster-name: eks-cluster-alvarez
          aws-region: $AWS_DEFAULT_REGION

  deploy-app-eks:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      aws-region:
        description: |
          AWS region
        type: string 
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: $AWS_DEFAULT_REGION
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: "app-deployment.yaml"          
          resource-name: deployment/app
      - kubernetes/create-or-update-resource:
          resource-file-path: "app-service.yaml"
      - run:
          name: information
          command: |
            # some time for creation
            sleep 60
            kubectl get svc
            kubectl get nodes
            kubectl get deployment
            kubectl get pods -o wide

  delete-cluster:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
      steps:
        - run:
            name: Install the eksctl tool
            command: |
              if which eksctl > /dev/null; then
                echo "eksctl is already installed"
                exit 0
              fi
              mkdir -p eksctl_download
              curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
                | tar xz -C eksctl_download
              chmod +x eksctl_download/eksctl
              SUDO=""
              if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
                SUDO="sudo"
              fi
              $SUDO mv eksctl_download/eksctl /usr/local/bin/
              rmdir eksctl_download
              
        - aws-eks/delete-cluster:
            cluster-name: eks-cluster-alvarez
            aws-region: $AWS_DEFAULT_REGION
            wait: true

workflows:
  default:
    jobs:
      #- build-environment
      #- build-and-push-docker-image:
      #    requires: [build-environment]
      #- create-cluster:
      #    cluster-name: eks-cluster-alvarez
      #- deploy-app-eks:
      #    requires: [build-and-push-docker-image]
      #    cluster-name: eks-cluster-alvarez
      #    aws-region: $AWS_DEFAULT_REGION
      #    requires: [create-cluster]
      - aws-eks/delete-cluster:
          cluster-name: eks-cluster-alvarez